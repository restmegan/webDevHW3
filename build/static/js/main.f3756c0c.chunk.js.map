{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","guess","setGuess","guesses","setGuesses","evals","setEvals","message","setMessage","currGuess","setCurrGuess","genNum","nums","length","temp","Math","floor","random","includes","push","secretCode","setSecretCode","makeGuess","guessArr","split","i","valueOf","j","isValidGuess","newGuesses","concat","guessSplit","exactCount","presentCount","k","m","evaluateGuess","newGame","getGuess","index","getEval","indexOf","className","onClick","type","value","onChange","ev","target","onKeyPress","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3756c0c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'milligram';\nimport './App.css';\n\nfunction App() {\n\tconst [guess, setGuess] = useState(\"\");\n\tconst [guesses, setGuesses] = useState([]);\n\tconst [evals, setEvals] = useState([]);\n\tconst [message, setMessage] = useState(\"\");\n\tconst [currGuess, setCurrGuess] = useState(0);\n\n\tfunction genNum() {\n\t\tlet nums = [];\n\t\twhile (nums.length < 4) {\n\t\t\tlet temp = Math.floor(Math.random() * 10);\n\t\t\tif (!nums.includes(temp)) {\n\t\t\t\tif (nums.length > 0 || temp != 0) {\n\t\t\t\t\tnums.push(temp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn nums;\n\t}\n\n\tconst [secretCode, setSecretCode] = useState(genNum);\n\n\tfunction updateGuess(ev) {\n\t\tsetGuess(ev.target.value);\n\t}\n\n\tfunction isValidGuess() {\n\t\tlet guessArr = guess.split(\"\");\n\t\t//console.log(guessArr);\n\t\tif (guessArr.length != 4) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < guessArr.length; i++) {\n\t\t\tif (typeof guessArr[i].valueOf() == \"number\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var j = i + 1; j < guessArr.length; j++) {\n\t\t\t\tif (guessArr[i] == guessArr[j]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction evaluateGuess() {\n\t\tlet guessSplit = guess.split(\"\");\n\t\tlet exactCount = 0;\n\t\tlet presentCount = 0;\n\t\tfor (var k = 0; k < guessSplit.length; k++) {\n\t\t\tif (guessSplit[k] == secretCode[k]) {\n\t\t\t\texactCount++;\n\t\t\t}\n\t\t\tfor (var m = 0; m < guessSplit.length; m++) {\n\t\t\t\tif (guessSplit[k] == secretCode[m] && m !== k) {\n\t\t\t\t\tpresentCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn exactCount + \"A\" + presentCount + \"B\";\n\t}\n\n\tfunction makeGuess() {\n\t\tif (isValidGuess()) {\n\t\t\tlet newGuesses = guesses;\n\t\t\tnewGuesses.push(guess);\n\t\t\tsetGuesses(newGuesses);\n\t\t\tsetEvals(evals.concat(evaluateGuess()));\n\t\t\tsetMessage(\"\");\n\t\t\tsetCurrGuess(currGuess + 1);\n\t\t} else {\n\t\t\tsetMessage(guess + \" is an invalid guess. Try again\");\n\t\t}\n\t\tsetGuess(\"\");\n\t}\n\n\t//source for keypress - class notes on making hangman game\n\t//github.com/NatTuck/scratch-2021-01/blob/master/notes-4550/04-react-intro/notes.md\n\tfunction keypress(ev) {\n\t\tif (ev.key == \"Enter\"){\n\t\t\tmakeGuess();\n\t\t}\n\t}\n\n\tfunction gameWon() {\n\t\tif (currGuess === 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn evals[currGuess - 1].indexOf(\"4A\") === 0;\n\t}\n\n\tfunction gameLost() {\n\t\treturn guesses.length >= 8;\n\t}\n\n\tfunction newGame() {\n\t\tsetGuesses([]);\n\t\tsetEvals([]);\n\t\tsetMessage(\"\");\n\t\tsetGuess(\"\");\n\t\tsetSecretCode(genNum);\n\t\tsetCurrGuess(0);\n\t}\n\n\tfunction getGuess(index) {\n\t\tif (index >= guesses.length) {\n\t\t\treturn \" \";\n\t\t}\n\t\treturn guesses[index];\n\t}\n\n\tfunction getEval(index) {\n\t\tif (index >= evals.length) {\n\t\t\treturn \" \";\n\t\t}\n\t\treturn evals[index];\n\t}\n\n\tif (gameWon()) {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>You won! The secret code was {secretCode}</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<button onClick={newGame}>New Game</button>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (gameLost()) {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>You ran out of guesses! The secret code was {secretCode}</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<button onClick={newGame}>New Game</button>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h2>Bulls and Cows Game</h2>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<h3>Guess</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<h3>Result</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getGuess(0)}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getEval(0)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getGuess(1)}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getEval(1)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getGuess(2)}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getEval(2)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getGuess(3)}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getEval(3)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getGuess(4)}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getEval(4)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getGuess(5)}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getEval(5)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getGuess(6)}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getEval(6)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getGuess(7)}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p>{getEval(7)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p>You have {8-guesses.length} guesses left</p>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p><input type=\"text\" value={guess} onChange={updateGuess} onKeyPress={keypress} /></p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<p><button onClick={makeGuess}>Guess</button></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p>{message}</p>\n\t\t\t<p>\n\t\t\t\t<button onClick={newGame}>New Game</button>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}